Rough todo
==========

V8:

- Load preset fails when:
    - Falling down hole at Moldorm 2.
    - Sometimes in text mode:
        - Zelda (prison)
        - Sanctuary
        - Kiki
    - During in-dungeon transitions

- Antifairy room, block state.
- Zelda is OOB in Sanctuary cutscene if you just hold down from the preset.
- Sexy statue secret.
- Features should persist through acm's save state code.

- DM presets are weird because there's no walking delay.

V9:

- Hack Module_Intro to go to file select as soon as everything needed is initialized.

- Add some footprint w/version (intro, file select, pause menu).

- Set RNG for rooms (trock pokies, aga etc).

- Ingame manual counter (to practice a trick X times and see your success rate).

- Reenable floor indicator and position it somewhere else.

V10:

- Toggle music.

- LoS sprite viewer.

- Lagometer. Toggleable feature that makes the magic go down/up depending on how laggy a frame was.

- Better frame advance mode. Perhaps only pause while holding L in, and if you press R while holding L it advances
        the game one frame. Would be good for clip practice.

- Slowdown.

- Make it possible to draw hearts the normal way.

- Make counters not run while game is paused (frame advance mode). Can be useful for TAS-ing rooms.

Future:

- Save best room times. Make them persist through save/load state.
  This can then be exportable through a web ui. Could even include WR times in next version. Or perhaps a "patch your
  SRM with WR times" web ui. Holy carp.  

- Mashing and pumping minigame (mps, max frames w/o mash, frames lost total etc).

- Reconfigurable controls (save/load state mostly).

Notes
=====
%a16()
LDA.w #$6 : STA $1AF0

%ai8()
LDA $10 : STA $010C
LDA #$0E : STA $10
LDA #$0A : STA $11
LDA #$6 : STA $0200

--

7EF3C5-7EF3C8 = diff game phase things.
7EF3C5=1 = got sword from uncle
7EF3CC = zelda bitching (set to 0)

--

BCC = BLT
BCS = BGT

--

7EF366 = Big key array, indexed by 040C. Masks found in 98C0:
  LDY $040C : LDA $7EF366 : AND $98C0, Y : BNE .haveKey

--

SNES fps = 60.098814

--

$02E99D = BirdTravel_LoadTargetAreaData
$02EA30 = After the PLB
$0AB90D = JSL BirdTravel_LoadTargetAreaData

--

http://wiki.nesdev.com/w/images/7/76/Programmanual.pdf

--

$7B[0x1]: 0x00 = LW, 0x40 = DW?
$8A[0x1]: 0x00 = LW, 0x40 = DW?
$7EF3CA[0x01] - 0x00 = LW, 0x40 = DW
$02DB[0x1]: Set when warping to DW?

$0AA1 = 0x21 for dark world, 0x20 for light world.
$0AA4 = 0x08 for dark world, 0x00 for light world.
$0AA4 = 0x01 in LW, 0x0B in DW

Can look at $7EFD40, X (X=$8A aka ow index). Might be set up differently for lw/dw.


0AA4[0x1]: 
    Misc. Sprite Graphics index. Valid values are: 0x01, 0x0A, or 0x0B.
    0x01 - Light world Overworld
    0x0A - Dungeons
    0x0B - Dark World Overworld

$0AB3[0x1] - Selects BP-2 through BP-6 (first halves)
    0 - Light World
    1 - Dark World
    2 - Light World Death Mountain
    3 - Dark World Death Mountain
    4 - Used during history mode
    5 - Seems to be used during initialization
$0AB4[0x01] - Selects BP-2 through BP-4 (second halves). Values 0x00 to 0x13 are valid. Only used during loading the overworld and the title screen.
$0AB5[0x01] - Selects BP-5 through BP-7 (second halves). Values 0x00 to 0x13 are valid. Only used during loading the overworld and the title screen.

$0FFF[0x01] - Indicates whether you are in the light world or dark world (0,1 respectively)

--

$A8: DW version = LW version OR 0x40

--

$02:8154 = `JSR Dungeon_LoadEntrance` from Module_PreDungeon
$02:D617 = ^ the destination (Dungeon_LoadEntrance)

----------

$01:88A7 = start of the loop
$01:88C7 = found a torch that matched the room we're loading
$02:D836 = some stuff we're currently not doing in load_dungeon
